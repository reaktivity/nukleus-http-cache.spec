#
# Copyright 2016-2021 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property responseDate ${http_cache:date()} # sharedProperty
property response2Date ${http_cache:datePlus(3)} # sharedProperty

connect await ROUTED_PROXY
        "nukleus://streams/http-cache#0"
        option nukleus:window 8192
        option nukleus:transmission "half-duplex"

write nukleus:begin.ext ${http:beginEx()
                              .typeId(nukleus:id("http"))
                              .header(":scheme", "http")
                              .header(":method", "GET")
                              .header(":path", "/data")
                              .header(":authority", "localhost:8080")
                              .header("prefer", "wait=20")
                              .header("user-agent", "user-agent-1")
                              .build()}
connected

write close

read nukleus:begin.ext ${http:beginEx()
                             .typeId(nukleus:id("http"))
                             .header(":status", "200")
                             .header("content-length", "11")
                             .header("date", responseDate)
                             .header("cache-control", "max-age=10")
                             .header("etag", "first")
                             .header("vary", "user-agent")
                             .header("preference-applied", "wait=20")
                             .header("access-control-expose-headers", "preference-applied, etag")
                             .build()}

read "response #1"

read closed

read notify FIRST_REQUEST_COMPLETED

connect await FIRST_REQUEST_COMPLETED
        "nukleus://streams/http-cache#0"
        option nukleus:window 8192
        option nukleus:transmission "half-duplex"

write nukleus:begin.ext ${http:beginEx()
                              .typeId(nukleus:id("http"))
                              .header(":scheme", "http")
                              .header(":method", "GET")
                              .header(":path", "/data")
                              .header(":authority", "localhost:8080")
                              .header("prefer", "wait=20")
                              .header("cache-control", "max-age=0")
                              .header("if-none-match", "first")
                              .header("user-agent", "user-agent-1")
                              .build()}
connected

write close

read notify SECOND_REQUEST_SENT

read nukleus:begin.ext ${http:beginEx()
                             .typeId(nukleus:id("http"))
                             .header(":status", "503")
                             .header("retry-after", "0")
                             .build()}

read closed

connect await SECOND_REQUEST_SENT
        "nukleus://streams/http-cache#0"
        option nukleus:window 8192
        option nukleus:transmission "half-duplex"

write nukleus:begin.ext ${http:beginEx()
                              .typeId(nukleus:id("http"))
                              .header(":scheme", "http")
                              .header(":method", "GET")
                              .header(":path", "/data")
                              .header(":authority", "localhost:8080")
                              .header("prefer", "wait=20")
                              .header("cache-control", "max-age=0")
                              .header("if-none-match", "first")
                              .header("user-agent", "user-agent-2")
                              .build()}
connected

write close

read nukleus:begin.ext ${http:beginEx()
                             .typeId(nukleus:id("http"))
                             .header(":status", "200")
                             .header("content-length", "11")
                             .header("date", response2Date)
                             .header("cache-control", "max-age=10")
                             .header("etag", "second")
                             .header("vary", "user-agent")
                             .header("preference-applied", "wait=20")
                             .header("access-control-expose-headers", "preference-applied, etag")
                             .build()}

read "response #2"

read closed
